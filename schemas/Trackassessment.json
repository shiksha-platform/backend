{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "properties": {
    "Trackassessment": {
      "$ref": "#/definitions/Trackassessment"
    }
  },
  "required": ["Trackassessment"],
  "title": "Trackassessment",
  "definitions": {
    "Trackassessment": {
      "$id": "#/properties/Trackassessment",
      "type": "object",
      "title": "The Assessment track schema",
      "description": "A Assessment track is an entity for stroing.",
      "required": [],
      "properties": {
        "filter": {
          "$id": "#/properties/filter",
          "type": "string",
          "title": "JSON string of filters selected for the assessment"
        },
        "type": {
          "$id": "#/properties/type",
          "type": "string",
          "title": "Assessment type, theory or oral"
        },
        "questions": {
          "$id": "#/properties/questions",
          "type": "array",
          "title": "Array of question Id's against the assessment is given",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "$id": "#/properties/source",
          "type": "string",
          "title": "Assesment questions source"
        },
        "answersheet": {
          "$id": "#/properties/score",
          "type": "string",
          "title": "JSON encoded QUML player/google bolo response against the given questions of the assessment"
        },
        "score": {
          "$id": "#/properties/score",
          "type": "string",
          "title": "Calculated score from the answer sheet"
        },
        "studentId": {
          "$id": "#/properties/studentId",
          "type": "string",
          "title": "Student Id who has given assessment"
        },
        "teacherId": {
          "$id": "#/properties/teacherId",
          "type": "string",
          "title": "Teacher Id who has assigned the assessment"
        }
      }
    }
  },
  "_osConfig": {
    "osComment": [
      "This section contains the OpenSABER specific configuration information",
      "privateFields: Optional; list of field names to be encrypted and stored in database",
      "signedFields: Optional; list of field names that must be pre-signed",
      "indexFields: Optional; list of field names used for creating index. Enclose within braces to indicate it is a composite index. In this definition, (serialNum, schoolCode) is a composite index and schoolName is a single column index.",
      "uniqueIndexFields: Optional; list of field names used for creating unique index. Field names must be different from index field name",
      "systemFields: Optional; list of fields names used for system standard information like created, updated timestamps and userid"
    ],
    "privateFields": [],
    "signedFields": [],
    "indexFields": [],
    "uniqueIndexFields": [],
    "systemFields": [
      "osCreatedAt",
      "osUpdatedAt",
      "osCreatedBy",
      "osUpdatedBy"
    ],
    "attestationPolicies": [],
    "inviteRoles": ["anonymous"]
  }
}
