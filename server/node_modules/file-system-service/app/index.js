'use strict';

/* eslint-disable no-sync */

const fs = require('fs');
const util = require('util');

module.exports = class FileSystemService {

    static _tryParsingJson (json, errorMessage) {
        try {
            return JSON.parse(json);
        } catch (err) {
            console.error(err);
            throw new Error(errorMessage);
        }
    }

    static _couldNotReadFileError (filePath) {
        return new Error(`Could not read file: "${filePath}"`);
    }

    constructor () {
        this.encoding = 'utf8';
    }

    readFile (filePath) {
        return util.promisify(fs.readFile)(filePath, this.encoding)
            .then(result => result.trim())
            .catch(err => {
                console.error(err);
                return Promise.reject(this.constructor._couldNotReadFileError(filePath));
            });
    }

    readFileSync (filePath) {
        try {
            return fs.readFileSync(filePath, this.encoding).trim();
        } catch (err) {
            console.error(err);
            throw this.constructor._couldNotReadFileError(filePath);
        }
    }

    readJsonFile (filePath) {
        return this.readFile(filePath)
            .then(fileContents => this.constructor._tryParsingJson(fileContents, `Invalid JSON file: "${filePath}"`));
    }

    readJsonFileSync (filePath) {
        const fileContents = this.readFileSync(filePath);
        return this.constructor._tryParsingJson(fileContents, `Invalid JSON file: "${filePath}"`);
    }

};
